{"version":3,"sources":["components/Food.js","components/Snake.js","screens/SnakeBoard.js","App.js","index.js"],"names":["Food","style","backgroundColor","width","height","borderRadius","Snake","SnakeBoard","initialRows","i","push","k","randomPosition","x","Math","floor","random","y","useState","rows","setRows","snake","setSnake","direction","setDirection","food","setFood","onkeydown","e","keyCode","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newSnake","forEach","cell","pop","newRows","displaySnake","display","flexDirection","justifyContent","alignItems","map","row","fontFamily","length","MainContainer","styled","div","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33559fa2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Food = () => {\n  return (\n    <div\n      style={{\n        backgroundColor: \"#6e7c7c\",\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n      }}\n    />\n  );\n};\n\nexport default Food;\n","import React from \"react\";\n\nconst Snake = () => {\n  return (\n    <div\n      style={{\n        backgroundColor: \"#c8c6a7\",\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n      }}\n    />\n  );\n};\n\nexport default Snake;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Food from \"../components/Food.js\";\nimport Snake from \"../components/Snake.js\";\n\nconst width = 18;\nconst height = 18;\n\nconst SnakeBoard = () => {\n  let initialRows = [];\n  for (let i = 0; i < height; i++) {\n    initialRows.push([]);\n    for (let k = 0; k < width; k++) {\n      initialRows[i].push(\"blank\");\n    }\n  }\n\n  const randomPosition = () => {\n    const position = {\n      x: Math.floor(Math.random() * width),\n      y: Math.floor(Math.random() * height),\n    };\n    return position;\n  };\n\n  const [rows, setRows] = useState(initialRows);\n  const [snake, setSnake] = useState([\n    { x: 0, y: 0 },\n    { x: 1, y: 0 },\n  ]);\n  const [direction, setDirection] = useState(\"right\");\n  const [food, setFood] = useState(randomPosition);\n\n  onkeydown = (e) => {\n    switch (e.keyCode) {\n      case 37:\n        setDirection(\"left\");\n        break;\n      case 38:\n        setDirection(\"top\");\n        break;\n      case 39:\n        setDirection(\"right\");\n        break;\n      case 40:\n        setDirection(\"bottom\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const displaySnake = () => {\n    const newRows = initialRows;\n    snake.forEach((cell) => {\n      newRows[cell.x][cell.y] = \"snake\";\n    });\n    newRows[food.x][food.y] = \"food\";\n    setRows(newRows);\n  };\n\n  const moveSnake = () => {\n    const newSnake = [];\n    switch (direction) {\n      case \"right\":\n        newSnake.push({ x: snake[0].x, y: (snake[0].y + 1) % width });\n        break;\n      case \"left\":\n        newSnake.push({ x: snake[0].x, y: (snake[0].y - 1 + width) % width });\n        break;\n      case \"top\":\n        newSnake.push({ x: (snake[0].x - 1 + height) % height, y: snake[0].y });\n        break;\n      case \"bottom\":\n        newSnake.push({ x: (snake[0].x + 1) % height, y: snake[0].y });\n    }\n    snake.forEach((cell) => {\n      newSnake.push(cell);\n    });\n\n    if (snake[0].x === food.x && snake[0].y === food.y) {\n      setFood(randomPosition);\n    } else {\n      newSnake.pop();\n    }\n    setSnake(newSnake);\n    displaySnake();\n  };\n\n  useInterval(moveSnake, 200);\n\n  function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {rows.map((row) => (\n        <div style={{ display: \"flex\", backgroundColor: \"#435560\" }}>\n          {row.map((e) => {\n            switch (e) {\n              case \"blank\":\n                return (\n                  <div\n                    style={{\n                      backgroundColor: \"#435560\",\n                      width: 30,\n                      height: 30,\n                    }}\n                  />\n                );\n              case \"snake\":\n                return <Snake />;\n              case \"food\":\n                return <Food />;\n            }\n          })}\n        </div>\n      ))}\n\n      <h1\n        style={{ fontFamily: \"sans-serif\" }}\n      >{`your score is:  ${snake.length}`}</h1>\n    </div>\n  );\n};\n\nexport default SnakeBoard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SnakeBoard from \"./screens/SnakeBoard.js\";\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction App() {\n  return (\n    <MainContainer>\n      <SnakeBoard />\n    </MainContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}